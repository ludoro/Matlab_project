function [] = show_tri( id_t )
close all
%figure
global info_trace;
global trace_vertex;
global trace;
global node;
global triangle;
global edge
global n_edges
axes('XAxisLocation','origin','YAxisLocation','origin');
hold on;

%base grigia di tutta la triangolazione
for i=1:n_edges
    line([node(edge(i,1)).x node(edge(i,2)).x],...
         [node(edge(i,1)).y node(edge(i,2)).y],...
         'Color',[0.8 0.8 0.8]);
    hold on
end

%mostro triangoli vicini (grigi)
if(info_trace(id_t).near_tri(1).id~=0)
for i=1:length(info_trace(id_t).near_tri)
    fill([node(triangle(info_trace(id_t).near_tri(i).id,1)).x ...
          node(triangle(info_trace(id_t).near_tri(i).id,2)).x ...
          node(triangle(info_trace(id_t).near_tri(i).id,3)).x], ...
         [node(triangle(info_trace(id_t).near_tri(i).id,1)).y ...
          node(triangle(info_trace(id_t).near_tri(i).id,2)).y ...
          node(triangle(info_trace(id_t).near_tri(i).id,3)).y], ...
         [0.95 0.95 0.95],'EdgeColor',[0.7 0.7 0.7]);
     hold on;
end
end

%traccia intera

plot([trace_vertex(trace(id_t,1),1) trace_vertex(trace(id_t,2),1)]+1e-4*[1 1],...
     [trace_vertex(trace(id_t,1),2) trace_vertex(trace(id_t,2),2)]+1e-4*[1 1],...
     '.-r','MarkerSize',9);
hold on

%intersezioni della traccia
s=sort(info_trace(id_t).s);
for i=1:(length(s))
    plot(trace_vertex(trace(id_t,1),1)+s(i)*(trace_vertex(trace(id_t,2),1)-trace_vertex(trace(id_t,1),1)), ...
         trace_vertex(trace(id_t,1),2)+s(i)*(trace_vertex(trace(id_t,2),2)-trace_vertex(trace(id_t,1),2)), ...
         'Color','r','MarkerSize',5,'Marker','o');
    hold on;
end

% s=sort(info_trace(id_t).s);
% 
% line([trace_vertex(trace(id_t,1),1) ...
%       trace_vertex(trace(id_t,1),1)+s(1)*(trace_vertex(trace(id_t,2),1)-trace_vertex(trace(id_t,1),1))], ...
%      [trace_vertex(trace(id_t,1),2) ...
%       trace_vertex(trace(id_t,1),2)+s(1)*(trace_vertex(trace(id_t,2),2)-trace_vertex(trace(id_t,1),2))], ...
%      'Color','r');
%  hold on
%   
% for i=1:(length(s)-1)
%     plot([trace_vertex(trace(id_t,1),1)+s(i)*(trace_vertex(trace(id_t,2),1)-trace_vertex(trace(id_t,1),1)) ...
%           trace_vertex(trace(id_t,1),1)+s(i+1)*(trace_vertex(trace(id_t,2),1)-trace_vertex(trace(id_t,1),1))], ...
%          [trace_vertex(trace(id_t,1),2)+s(i)*(trace_vertex(trace(id_t,2),2)-trace_vertex(trace(id_t,1),2)) ...
%           trace_vertex(trace(id_t,1),2)+s(i+1)*(trace_vertex(trace(id_t,2),2)-trace_vertex(trace(id_t,1),2))], ...
%          'Color','r','MarkerSize',5,'Marker','o');
%     hold on;
% end
% 
% line([trace_vertex(trace(id_t,1),1)+s(end)*(trace_vertex(trace(id_t,2),1)-trace_vertex(trace(id_t,1),1)), ...
%       trace_vertex(trace(id_t,2),1)], ...
%      [trace_vertex(trace(id_t,1),2)+s(end)*(trace_vertex(trace(id_t,2),2)-trace_vertex(trace(id_t,1),2)), ...
%       trace_vertex(trace(id_t,2),2)], ...
%       'Color','r');
%  hold on

%mostro i triangolini della triangolazione (azzurro)
if(info_trace(id_t).cut_tri(1).id~=0)
for i=1:length(info_trace(id_t).cut_tri)
    for j=1:size(info_trace(id_t).cut_tri(i).tri,1)
        if(info_trace(id_t).cut_tri(i).tri(j,1)~=0)
            line([info_trace(id_t).cut_tri(i).points( info_trace(id_t).cut_tri(i).tri(j,1) ,1) ...
                  info_trace(id_t).cut_tri(i).points( info_trace(id_t).cut_tri(i).tri(j,2) ,1) ...
                  info_trace(id_t).cut_tri(i).points( info_trace(id_t).cut_tri(i).tri(j,3) ,1) ...
                  info_trace(id_t).cut_tri(i).points( info_trace(id_t).cut_tri(i).tri(j,1) ,1)], ...
                 [info_trace(id_t).cut_tri(i).points( info_trace(id_t).cut_tri(i).tri(j,1) ,2) ...
                  info_trace(id_t).cut_tri(i).points( info_trace(id_t).cut_tri(i).tri(j,2) ,2) ...
                  info_trace(id_t).cut_tri(i).points( info_trace(id_t).cut_tri(i).tri(j,3) ,2) ...
                  info_trace(id_t).cut_tri(i).points( info_trace(id_t).cut_tri(i).tri(j,1) ,2)], ...
                  'Color',[0.1 0.7 1]);
            hold on;
        end
    end
end
%mostro i triangoli originari (blu scuro)
for i=1:length(info_trace(id_t).cut_tri)
    fill([node(triangle(info_trace(id_t).cut_tri(i).id,1)).x ...
          node(triangle(info_trace(id_t).cut_tri(i).id,2)).x ...
          node(triangle(info_trace(id_t).cut_tri(i).id,3)).x], ...
         [node(triangle(info_trace(id_t).cut_tri(i).id,1)).y ...
          node(triangle(info_trace(id_t).cut_tri(i).id,2)).y ...
          node(triangle(info_trace(id_t).cut_tri(i).id,3)).y], ...
         [0 0 0.5],'LineWidth',0.8,'FaceAlpha',0.15,'EdgeColor',[0 0 0.5]);
     hold on;
end
end

axis equal;

end

